// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package azsearch

// DataSourcesClientCreateOptions contains the optional parameters for the DataSourcesClient.Create method.
type DataSourcesClientCreateOptions struct {
	// placeholder for future optional parameters
}

// DataSourcesClientCreateOrUpdateOptions contains the optional parameters for the DataSourcesClient.CreateOrUpdate method.
type DataSourcesClientCreateOrUpdateOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// DataSourcesClientDeleteOptions contains the optional parameters for the DataSourcesClient.Delete method.
type DataSourcesClientDeleteOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// DataSourcesClientGetOptions contains the optional parameters for the DataSourcesClient.Get method.
type DataSourcesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DataSourcesClientListOptions contains the optional parameters for the DataSourcesClient.List method.
type DataSourcesClientListOptions struct {
	// Selects which top-level properties of the data sources to retrieve. Specified as a comma-separated list of JSON property
// names, or '*' for all properties. The default is all properties.
	Select *string
}

// IndexersClientCreateOptions contains the optional parameters for the IndexersClient.Create method.
type IndexersClientCreateOptions struct {
	// placeholder for future optional parameters
}

// IndexersClientCreateOrUpdateOptions contains the optional parameters for the IndexersClient.CreateOrUpdate method.
type IndexersClientCreateOrUpdateOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// IndexersClientDeleteOptions contains the optional parameters for the IndexersClient.Delete method.
type IndexersClientDeleteOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// IndexersClientGetOptions contains the optional parameters for the IndexersClient.Get method.
type IndexersClientGetOptions struct {
	// placeholder for future optional parameters
}

// IndexersClientGetStatusOptions contains the optional parameters for the IndexersClient.GetStatus method.
type IndexersClientGetStatusOptions struct {
	// placeholder for future optional parameters
}

// IndexersClientListOptions contains the optional parameters for the IndexersClient.List method.
type IndexersClientListOptions struct {
	// Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list of JSON property names,
// or '*' for all properties. The default is all properties.
	Select *string
}

// IndexersClientResetOptions contains the optional parameters for the IndexersClient.Reset method.
type IndexersClientResetOptions struct {
	// placeholder for future optional parameters
}

// IndexersClientRunOptions contains the optional parameters for the IndexersClient.Run method.
type IndexersClientRunOptions struct {
	// placeholder for future optional parameters
}

// IndexesClientAnalyzeOptions contains the optional parameters for the IndexesClient.Analyze method.
type IndexesClientAnalyzeOptions struct {
	// placeholder for future optional parameters
}

// IndexesClientCreateOptions contains the optional parameters for the IndexesClient.Create method.
type IndexesClientCreateOptions struct {
	// placeholder for future optional parameters
}

// IndexesClientCreateOrUpdateOptions contains the optional parameters for the IndexesClient.CreateOrUpdate method.
type IndexesClientCreateOrUpdateOptions struct {
	// Allows new analyzers, tokenizers, token filters, or char filters to be added to an index by taking the index offline for
// at least a few seconds. This temporarily causes indexing and query requests to
// fail. Performance and write availability of the index can be impaired for several minutes after the index is updated, or
// longer for very large indexes.
	AllowIndexDowntime *bool

	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// IndexesClientDeleteOptions contains the optional parameters for the IndexesClient.Delete method.
type IndexesClientDeleteOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// IndexesClientGetOptions contains the optional parameters for the IndexesClient.Get method.
type IndexesClientGetOptions struct {
	// placeholder for future optional parameters
}

// IndexesClientGetStatisticsOptions contains the optional parameters for the IndexesClient.GetStatistics method.
type IndexesClientGetStatisticsOptions struct {
	// placeholder for future optional parameters
}

// IndexesClientListOptions contains the optional parameters for the IndexesClient.NewListPager method.
type IndexesClientListOptions struct {
	// Selects which top-level properties of the index definitions to retrieve. Specified as a comma-separated list of JSON property
// names, or '*' for all properties. The default is all properties.
	Select *string
}

// RequestOptions contains a group of parameters for the DataSourcesClient.CreateOrUpdate method.
type RequestOptions struct {
	// The tracking ID sent with the request to help with debugging.
	XMSClientRequestID *string
}

// ServiceClientGetServiceStatisticsOptions contains the optional parameters for the ServiceClient.GetServiceStatistics method.
type ServiceClientGetServiceStatisticsOptions struct {
	// placeholder for future optional parameters
}

// SkillsetsClientCreateOptions contains the optional parameters for the SkillsetsClient.Create method.
type SkillsetsClientCreateOptions struct {
	// placeholder for future optional parameters
}

// SkillsetsClientCreateOrUpdateOptions contains the optional parameters for the SkillsetsClient.CreateOrUpdate method.
type SkillsetsClientCreateOrUpdateOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// SkillsetsClientDeleteOptions contains the optional parameters for the SkillsetsClient.Delete method.
type SkillsetsClientDeleteOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// SkillsetsClientGetOptions contains the optional parameters for the SkillsetsClient.Get method.
type SkillsetsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SkillsetsClientListOptions contains the optional parameters for the SkillsetsClient.List method.
type SkillsetsClientListOptions struct {
	// Selects which top-level properties of the skillsets to retrieve. Specified as a comma-separated list of JSON property names,
// or '*' for all properties. The default is all properties.
	Select *string
}

// SynonymMapsClientCreateOptions contains the optional parameters for the SynonymMapsClient.Create method.
type SynonymMapsClientCreateOptions struct {
	// placeholder for future optional parameters
}

// SynonymMapsClientCreateOrUpdateOptions contains the optional parameters for the SynonymMapsClient.CreateOrUpdate method.
type SynonymMapsClientCreateOrUpdateOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// SynonymMapsClientDeleteOptions contains the optional parameters for the SynonymMapsClient.Delete method.
type SynonymMapsClientDeleteOptions struct {
	// Defines the If-Match condition. The operation will be performed only if the ETag on the server matches this value.
	IfMatch *string

	// Defines the If-None-Match condition. The operation will be performed only if the ETag on the server does not match this
// value.
	IfNoneMatch *string
}

// SynonymMapsClientGetOptions contains the optional parameters for the SynonymMapsClient.Get method.
type SynonymMapsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SynonymMapsClientListOptions contains the optional parameters for the SynonymMapsClient.List method.
type SynonymMapsClientListOptions struct {
	// Selects which top-level properties of the synonym maps to retrieve. Specified as a comma-separated list of JSON property
// names, or '*' for all properties. The default is all properties.
	Select *string
}

